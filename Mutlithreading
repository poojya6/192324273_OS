#include <stdio.h>

#include <stdlib.h>

#include <pthread.h>

#include <unistd.h>

// Function executed by each thread

void *print_message(void *thread_id) {

long tid = (long) thread_id; // Get thread ID

printf("Thread %ld: Hello from thread!\n", tid);

sleep(1); // Simulating some work

pthread_exit(NULL);

}

int main() {

int num_threads = 5; // Number of threads

pthread_t threads[num_threads];

// Creating multiple threads

for (long i = 0; i < num_threads; i++) {

printf("Main: Creating thread %ld\n", i);

int rc = pthread_create(&threads[i], NULL, print_message, (void *) i);

if (rc) {

printf("Error: Unable to create thread %ld, return code: %d\n", i, rc);

exit(EXIT_FAILURE);

}

}

// Waiting for all threads to finish

for (int i = 0; i < num_threads; i++) {

pthread_join(threads[i], NULL);

}

printf("Main: All threads completed.\n");

return 0;

}
