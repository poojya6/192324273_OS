#include <stdio.h>

#define MAX_FRAMES 10

#define MAX_PAGES 50

// Function to find the page that will not be used for the longest period

int findOptimal(int pages[], int frames[], int num_pages, int num_frames, int

current_index) {

int farthest = -1, pos = -1;

for (int i = 0; i < num_frames; i++) {

int j;

for (j = current_index + 1; j < num_pages; j++) {

if (frames[i] == pages[j]) {

if (j > farthest) {

farthest = j;

pos = i;

}

break;

}

}

// If a frame is never used again, replace it

if (j == num_pages) {

return i;

}

}
// If all pages in frames are used in future, return the farthest one

return (pos == -1) ? 0 : pos;

}

// Optimal Page Replacement Algorithm

void optimalPageReplacement(int pages[], int num_pages, int num_frames) {

int frames[MAX_FRAMES]; // Frame buffer

int page_faults = 0;

// Initialize frames with -1 (empty)

for (int i = 0; i < num_frames; i++) {

frames[i] = -1;

}

printf("\nPage Reference | Frames\n");

printf("------------------------\n");

// Process each page in the reference string

for (int i = 0; i < num_pages; i++) {

printf("%12d | ", pages[i]);

int found = 0;

// Check if the page is already in the frames

for (int j = 0; j < num_frames; j++) {

if (frames[j] == pages[i]) {

found = 1;

break;

}

}

// If the page is not in frames, replace a page using Optimal strategy

if (!found) {

int pos = -1;

// Find an empty frame or use Optimal replacement

for (int j = 0; j < num_frames; j++) {

if (frames[j] == -1) {

pos = j;

break;

}

}

if (pos == -1) {

pos = findOptimal(pages, frames, num_pages, num_frames, i);
frames[pos] = pages[i];

page_faults++;

}

// Print the current frame state

for (int j = 0; j < num_frames; j++) {

if (frames[j] != -1)

printf("%d ", frames[j]);

else

printf("- ");

}

printf("\n");

}

printf("\nTotal Page Faults: %d\n", page_faults);

}

int main() {

int num_pages, num_frames;

int pages[MAX_PAGES];

// Input: Number of pages

printf("Enter number of pages: ");

scanf("%d", &num_pages);

// Input: Page reference string

printf("Enter the page reference string: ");

for (int i = 0; i < num_pages; i++) {

scanf("%d", &pages[i]);

}

// Input: Number of frames

printf("Enter number of frames: ");

scanf("%d", &num_frames);

// Run Optimal page replacement

optimalPageReplacement(pages, num_pages, num_frames);

return 0;}
